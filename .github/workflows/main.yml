
name: Build

on:
  push:
    branches:
    - master
  workflow_dispatch:

env:
  CPM_SOURCE_CACHE: ${{ github.workspace }}/cpm_modules

jobs:
  build:
    name: ${{ matrix.platform.name }}-${{ matrix.config.name }}-${{ matrix.type.name }}
    runs-on: ${{ matrix.platform.os }}

    strategy:
      fail-fast: false
      matrix:
        platform:
        - { name: win64-vs2022,     os: windows-latest,     flags: -A x64 }
        - { name: linux-gcc,        os: ubuntu-latest,      flags: -GNinja -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ }
  
        config:
        - { name: static,           flags: -DBUILD_SHARED_LIBS=OFF }
        - { name: shared,           flags: -DBUILD_SHARED_LIBS=ON }
  
        type:
        - { name: release }
        - { name: debug,            flags: -DCMAKE_BUILD_TYPE=Debug }

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: CPM cache
      id: cache-cpm
      uses: actions/cache@v2
      with:
        path: '**/cpm_modules'
        key: ${{ runner.os }}-cpm-modules-${{ hashFiles('**/CMakeLists.txt') }}

    - name: Install Linux dependencies
      if: runner.os == 'Linux'
      run: sudo apt-get install -y ninja-build libgl1-mesa-dev libgles2-mesa-dev xorg-dev

    - name: Configure
      run: cmake -B build ${{ matrix.platform.flags }} ${{ matrix.config.flags }} ${{ matrix.type.flags }}

    - name: Build
      run: cmake --build build --config ${{ matrix.type.name }}