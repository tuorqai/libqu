
name: Build

on:
  push:
    branches:
    - master
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.platform.name }}-${{ matrix.config.name }}-${{ matrix.type.name }}
    runs-on: ${{ matrix.platform.os }}

    strategy:
      fail-fast: false
      matrix:
        platform:
        - { name: win64-vs2022,     os: windows-latest,     flags: -A x64 }
        - { name: linux-gcc,        os: ubuntu-latest,      flags: -GNinja -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ }
  
        config:
        - { name: static,           flags: -DBUILD_SHARED_LIBS=OFF }
        - { name: shared,           flags: -DBUILD_SHARED_LIBS=ON }
  
        type:
        - { name: release }
        - { name: debug,            flags: -DCMAKE_BUILD_TYPE=Debug }

    steps:
    - name: CPM Cache
      id: cache-cpm
      uses: actions/cache@v2
      with:
        path: ~/cpm-cache
        key: ${{ runner.os }}-cpm-${{ hashFiles('**/') }}
        restore-keys: |
          ${{ runner.os }}-cpm-

    - name: Checkout
      uses: actions/checkout@v3

    - name: Install Linux dependencies
      if: runner.os == 'Linux'
      run: sudo apt-get install -y ninja-build libgl1-mesa-dev libgles2-mesa-dev xorg-dev libvorbis-dev libopenal-dev libfreetype-dev libharfbuzz-dev

    - name: Configure
      run: cmake -B build -DCPM_SOURCE_CACHE=~/cpm-cache -DCMAKE_INSTALL_PREFIX=install ${{ matrix.platform.flags }} ${{ matrix.config.flags }} ${{ matrix.type.flags }}

    - name: Build
      run: cmake --build build --config ${{ matrix.type.name }}

    - name: Install
      run: cmake --install build --config ${{ matrix.type.name }}

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        if-no-files-found: error
        name: ${{ matrix.platform.name }}-${{ matrix.config.name }}-${{ matrix.type.name }}
        path: 'install'